@page "/employees/create"
@using Microsoft.EntityFrameworkCore
@using CRUDOperations.Models
@inject IDbContextFactory<CRUDOperations.Data.CRUDOperationsContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<h1>Enter Employees Details</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Employees" OnValidSubmit="AddEmployees" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="employeefirstname" class="form-label">EmployeeFirstName:</label> 
                <InputText id="employeefirstname" @bind-Value="Employees.EmployeeFirstName" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employees.EmployeeFirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="employeelastname" class="form-label">EmployeeLastName:</label> 
                <InputText id="employeelastname" @bind-Value="Employees.EmployeeLastName" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employees.EmployeeLastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="birthday" class="form-label">Birthday:</label> 
                <InputDate id="birthday" @bind-Value="Employees.Birthday" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employees.Birthday" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Employees.Address" class="form-control" /> 
                <ValidationMessage For="() => Employees.Address" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/employees">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Employees Employees { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddEmployees()
    {
        using var context = DbFactory.CreateDbContext();
        context.Employees.Add(Employees);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/employees");
    }
}
